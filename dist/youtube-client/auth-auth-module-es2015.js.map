{"version":3,"sources":["./src/app/auth/auth-routing.module.ts","./src/app/auth/auth.module.ts","./src/app/auth/pages/login-page/login-page.component.ts","./src/app/auth/pages/login-page/login-page.component.html","./src/app/auth/services/user-login.service.ts"],"names":[],"mappings":"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","file":"auth-auth-module-es2015.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\n\r\nconst routes: Routes = [\r\n  { path: '', component: LoginPageComponent }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AuthRoutingModule { }\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { AuthRoutingModule } from './auth-routing.module';\r\nimport { LoginPageComponent } from './pages/login-page/login-page.component';\r\nimport { UserLoginService } from '@authService/user-login.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    LoginPageComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    AuthRoutingModule\r\n  ],\r\n  providers: [\r\n    UserLoginService,\r\n\r\n  ]\r\n})\r\nexport class AuthModule { }\r\n","import { AfterViewInit, Component, OnInit, ElementRef, ViewChild } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserTokenService } from '@coreService/user-token.service';\r\nimport { UserLoginService } from '@authService/user-login.service';\r\n\r\n@Component({\r\n  selector: 'app-login-page',\r\n  templateUrl: './login-page.component.html',\r\n  styleUrls: ['./login-page.component.scss']\r\n})\r\nexport class LoginPageComponent implements OnInit, AfterViewInit {\r\n  @ViewChild('name') public name: ElementRef;\r\n  @ViewChild('pass') public pass: ElementRef;\r\n  public logged: boolean;\r\n\r\n  constructor(private userToken?: UserTokenService,\r\n              private userLogin?: UserLoginService,\r\n              private router?: Router) {\r\n    this.logged = this.userToken.isLogged();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.userToken.logged.subscribe((val) => {\r\n      this.logged = val;\r\n    });\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    this.name.nativeElement.focus();\r\n  }\r\n\r\n  public login(): void {\r\n    if (this.logged) {\r\n      this.userLogin.deleteLogin();\r\n    } else {\r\n      this.userLogin.setLogin(this.name.nativeElement.value, this.pass.nativeElement.value);\r\n    }\r\n  }\r\n\r\n  public escape($event: KeyboardEvent): void {\r\n    if ($event.code === 'Escape') {\r\n      this.router.navigate(['/']);\r\n    }\r\n  }\r\n}\r\n","<div class=\"login\" (keyup)=\"escape($event)\">\r\n  <div class=\"wrapper\">\r\n    <h1>\r\n      Login\r\n    </h1>\r\n    <div class=\"login__username\">\r\n      <label for=\"username\">login</label>\r\n      <input id=\"username\" #name type=\"text\" >\r\n    </div>\r\n    <div class=\"login__pass\">\r\n      <label for=\"pass\">password</label>\r\n      <input id=\"pass\" #pass type=\"password\">\r\n    </div>\r\n    <div class=\"login__buttons\">\r\n      <button class=\"btn\" (click)=\"login()\" >{{logged ? 'Logout' : 'Login' }}</button>\r\n    </div>\r\n  </div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { SearchDataService } from '@coreService/search-data.service';\r\nimport { UserTokenService } from '@coreService/user-token.service';\r\nimport { RequestHttpService } from '@coreService/request-http.service';\r\nimport { MessageService } from '@coreService/message.service';\r\n\r\n@Injectable()\r\nexport class UserLoginService {\r\n\r\n  constructor(private userToken?: UserTokenService,\r\n              private searchData?: SearchDataService,\r\n              private router?: Router,\r\n              private reqHttp?: RequestHttpService,\r\n              private mess?: MessageService) { }\r\n\r\n  private confirm(name: string, pass: string): void {\r\n    this.mess.showUp('Loading...');\r\n    this.reqHttp.getToken(name, pass)\r\n      .subscribe((val: string) => {\r\n        if (val.length) {\r\n          this.userToken.set({ name: name, token: val });\r\n        } else {\r\n          this.userToken.delete();\r\n        }\r\n        this.router.navigate(['/']);\r\n        this.mess.hide();\r\n      },         () => { this.mess.showTimer('User is not exist'); }\r\n      );\r\n  }\r\n\r\n  public setLogin(name: string, pass: string): void {\r\n    this.confirm(name, pass);\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n  public deleteLogin(): void {\r\n    this.userToken.delete();\r\n    this.searchData.clear();\r\n    this.router.navigate(['/']);\r\n  }\r\n\r\n}\r\n"],"sourceRoot":"webpack:///"}