{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/core/components/header/header.component.ts","webpack:///src/app/core/components/header/header.component.html","webpack:///src/app/core/components/login/login.component.ts","webpack:///src/app/core/components/login/login.component.html","webpack:///src/app/core/components/sort-setting/sort-setting.component.ts","webpack:///src/app/core/components/sort-setting/sort-setting.component.html","webpack:///src/app/core/components/window-error/window-error.component.ts","webpack:///src/app/core/components/window-error/window-error.component.html","webpack:///src/app/core/core.module.ts","webpack:///src/app/core/guards/auth.guard.ts","webpack:///src/app/core/pages/fail-page/fail-page.component.ts","webpack:///src/app/core/pages/fail-page/fail-page.component.html","webpack:///src/app/core/services/auth-token.interceptor.ts","webpack:///src/app/core/services/base-url.interceptor.ts","webpack:///src/app/core/services/index.ts","webpack:///src/app/core/services/message.service.ts","webpack:///src/app/core/services/request-http.service.ts","webpack:///src/app/core/services/search-data.service.ts","webpack:///src/app/core/services/show-setting.service.ts","webpack:///src/app/core/services/sort-input.service.ts","webpack:///src/app/core/services/user-token.service.ts","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","routes","path","redirectTo","pathMatch","loadChildren","m","YoutubeModule","canLoad","canActivate","AuthModule","component","AppRoutingModule","forRoot","imports","AppComponent","title","selector","templateUrl","styleUrls","AppModule","declarations","providers","bootstrap","HeaderComponent","searchData","showBlockSet","settingBlock","hide","changeShow","subscribe","val","inputElement","nativeElement","pipe","value","clear","length","Http","focus","getResponseItems","get","showSetting","LoginComponent","userToken","router","userName","obs","logged","navigate","unsubscribe","login","SortSettingComponent","sortInput","dateClick","viewClick","wordInput","inputWord","sortDate","sortViews","filterWord","WindowErrorComponent","messServe","showMessage","obj","text","message","show","timer","setTimeout","stop","show1","CoreModule","provide","useClass","multi","AuthGuard","next","state","isLogged","route","FailPageComponent","AuthTokenInterceptor","handle","clone","params","set","API_KEY","BaseUrlInterceptor","url","BASE_URL","MessageService","RequestHttpService","http","YOUTUBE_URL","YOUTUBE_URL1","TYPE","PART","PART1","MAX_RESULTS","username","password","word","nextToken","ids","SearchDataService","reqHttp","mess","loadData","response","items","resp","searchWord","nowNext","showUp","getList","canNextRequest","showTimer","nextPageToken","listId","map","x","videoId","join","HttpSecond","getListStat","newVal","addResponse","setResponse","changeResponse","add","list","push","find","item","ShowSettingService","canShow","change","SortInputService","sorts","words","sortView","UserTokenService","localStorage","token","name","changeLogged","removeItem","field","environment","production","bootstrapModule","catch","err","console","error"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FailPageComponent } from './core/pages/fail-page/fail-page.component';\r\nimport { AuthGuard } from './core/guards/auth.guard';\r\n\r\nconst routes: Routes = [\r\n  {path: '', redirectTo: 'main', pathMatch: 'full'},\r\n  {path: 'main', loadChildren: () => import('./youtube/youtube.module')\r\n            .then(m => m.YoutubeModule), canLoad: [AuthGuard], canActivate: [AuthGuard]},\r\n  {path: 'login', loadChildren: () => import('./auth/auth.module')\r\n            .then(m => m.AuthModule)},\r\n  {path: '**', component: FailPageComponent}\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Component } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.scss']\r\n})\r\nexport class AppComponent {\r\n  public title: string = 'youtube-client';\r\n }\r\n","<h1 class=\"content\"><span>{{title}}</span></h1>\r\n<app-header></app-header>\r\n<router-outlet></router-outlet>\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { CoreModule } from './core/core.module';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    CoreModule\r\n  ],\r\n  providers: [\r\n\r\n  ],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter, AfterViewInit } from '@angular/core';\r\nimport { ShowSettingService } from '@coreService/show-setting.service';\r\nimport { SearchDataService } from '@coreService/search-data.service';\r\nimport { fromEvent } from 'rxjs';\r\nimport { debounceTime, map } from 'rxjs/operators';\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.scss']\r\n})\r\nexport class HeaderComponent implements OnInit, AfterViewInit {\r\n  public settingBlock: boolean;\r\n  @ViewChild('inputElement') public inputElement: ElementRef;\r\n\r\n  constructor(private searchData: SearchDataService, private showBlockSet: ShowSettingService) {\r\n    this.settingBlock = false;\r\n    this.showBlockSet.hide();\r\n  }\r\n  public ngOnInit(): void {\r\n    this.showBlockSet.changeShow.subscribe((val) => {\r\n      this.settingBlock = val ? this.settingBlock : false;\r\n    });\r\n  }\r\n\r\n  public ngAfterViewInit(): void {\r\n    fromEvent(this.inputElement.nativeElement, 'keyup')\r\n      .pipe(\r\n        debounceTime(1000),\r\n        map(() => this.inputElement.nativeElement.value))\r\n      .subscribe( (val) => {\r\n        if (!val) {\r\n          this.searchData.clear();\r\n        } else if (val.length > 2) {\r\n          this.searchData.Http(val);\r\n        }\r\n      });\r\n    this.inputElement.nativeElement.focus();\r\n  }\r\n\r\n  public showSetting(): void {\r\n    this.settingBlock = this.searchData.getResponseItems().length &&\r\n      this.showBlockSet.get() ? !this.settingBlock : false;\r\n  }\r\n}\r\n","<header>\r\n  <div class=\"wrapper\">\r\n    <div class=\"header-body\">\r\n      <img src=\"../../../../assets/icons/logo.svg\" alt=\"logo\">\r\n      <input #inputElement type=\"text\" class=\"search-field\">\r\n      <button class=\"search-setting btn\" (click)=\"showSetting()\">\r\n        <img src=\"../../../../assets/icons/setting.svg\" alt=\"setting\">\r\n      </button>\r\n    </div>\r\n    <app-login></app-login>\r\n  </div>\r\n  <app-sort-setting *ngIf=\"settingBlock\">\r\n  </app-sort-setting>\r\n</header>\r\n<app-window-error></app-window-error>\r\n","import { Component, OnInit, OnChanges, OnDestroy } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { UserTokenService } from '@coreService/user-token.service';\r\nimport { Subscription } from 'rxjs';\r\n\r\n@Component({\r\n  selector: 'app-login',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.scss']\r\n})\r\nexport class LoginComponent implements OnInit, OnDestroy {\r\n  private obs: Subscription;\r\n  public userName: string;\r\n\r\n  constructor(public userToken: UserTokenService, private router: Router) {\r\n    this.userName = this.userToken.get();\r\n  }\r\n\r\n  public ngOnInit(): void {\r\n    this.obs = this.userToken.logged.subscribe(() => {\r\n      this.userName = this.userToken.get();\r\n    });\r\n  }\r\n  public login(): void {\r\n    this.router.navigate(['/login']);\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.obs.unsubscribe();\r\n  }\r\n}\r\n","<div class=\"user\">\r\n  <div class=\"user-name\">{{ userName }}</div>\r\n  <svg (click)=\"login()\" class=\"btn\" width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"none\" xmlns=\"http://www.w3.org/2000/svg\">\r\n    <path d=\"M24 5C24 2.23858 21.7614 0 19 0H5C2.23858 0 0 2.23858 0 5V19C0 21.7614 2.23858 24 5 24H19C21.7614 24 24 21.7614 24 19V5ZM2.39993 12C2.39993 6.72 6.71993 2.4 11.9999 2.4C17.2799 2.4 21.5999 6.72 21.5999 12C21.5999 17.28 17.2799 21.6 11.9999 21.6C6.71993 21.6 2.39993 17.28 2.39993 12ZM14.8799 8.16C14.8799 6.57692 13.583 5.28 11.9999 5.28C10.4169 5.28 9.11993 6.57692 9.11993 8.16C9.11993 9.74307 10.4169 11.04 11.9999 11.04C13.583 11.04 14.8799 9.74307 14.8799 8.16ZM6.99188 14.7033C6.20027 15.3868 6.52028 16.5762 7.28858 17.2858C8.52571 18.4285 10.1806 19.1446 11.9999 19.1446C13.8176 19.1446 15.4711 18.4272 16.7078 17.2871C17.4783 16.5769 17.7993 15.3852 17.0055 14.7012C15.7911 13.6546 13.3984 13.0938 11.9999 13.0938C10.6005 13.0938 8.20552 13.6553 6.99188 14.7033Z\" />\r\n  </svg>\r\n</div>\r\n","import { Component, OnInit, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\r\nimport { SortInputService } from '@coreService/sort-input.service';\r\n\r\n@Component({\r\n  selector: 'app-sort-setting',\r\n  templateUrl: './sort-setting.component.html',\r\n  styleUrls: ['./sort-setting.component.scss']\r\n})\r\nexport class SortSettingComponent implements OnInit {\r\n  @ViewChild('inputWord') public inputWord: ElementRef;\r\n  constructor(private sortInput?: SortInputService) { }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n  public sortDate(): void {\r\n    this.sortInput.dateClick();\r\n  }\r\n  public sortViews(): void {\r\n    this.sortInput.viewClick();\r\n  }\r\n  public filterWord(): void {\r\n    this.sortInput.wordInput(this.inputWord.nativeElement.value);\r\n  }\r\n}\r\n","<div class=\"sort-setting\">\r\n  <div class=\"sort-text\">\r\n    Sorting by:\r\n  </div>\r\n  <div>\r\n    <span class=\"sort-date\" (click)=\"sortDate()\">date</span>\r\n  </div>\r\n  <div>\r\n    <span class=\"sort-count\" (click)=\"sortViews()\">count of views</span>\r\n  </div>\r\n  <div>\r\n    <label for=\"text\">by word or sentence</label>\r\n    <input id=\"text\" type=\"text\" class=\"sort-word\" #inputWord (change)=\"filterWord()\">\r\n  </div>\r\n</div>\r\n","import { Component, OnInit, OnDestroy } from '@angular/core';\r\nimport { MessageService } from '@coreService/message.service';\r\n\r\n@Component({\r\n  selector: 'app-window-error',\r\n  templateUrl: './window-error.component.html',\r\n  styleUrls: ['./window-error.component.scss']\r\n})\r\nexport class WindowErrorComponent implements OnInit, OnDestroy {\r\n  public message: string;\r\n  public show: boolean;\r\n  public show1: boolean;\r\n\r\n  constructor(private messServe?: MessageService) { }\r\n\r\n  public ngOnInit(): void {\r\n    this.messServe.showMessage\r\n      .subscribe((obj: {show: boolean, text?: string, timer?: number}) => {\r\n        if (obj.text) {\r\n          this.message = obj.text;\r\n        }\r\n        this.show = obj.show;\r\n        if (obj.timer) {\r\n          setTimeout(stop, obj.timer );\r\n        } else if (this.show) {\r\n          this.show1 = true;\r\n        } else {\r\n          this.show1 = false;\r\n        }\r\n\r\n      });\r\n  }\r\n\r\n  public ngOnDestroy(): void {\r\n    this.messServe.showMessage.unsubscribe();\r\n  }\r\n\r\n}\r\n","<div class=\"error-message\" *ngIf=\"show\">\r\n  <div class=\"spinner\">{{message}}\r\n    <div class=\"show-spin\" *ngIf=\"show1\"></div>\r\n  </div>\r\n\r\n</div>\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { HeaderComponent } from './components/header/header.component';\r\nimport { SortSettingComponent } from './components/sort-setting/sort-setting.component';\r\nimport { LoginComponent } from './components/login/login.component';\r\nimport { FailPageComponent } from './pages/fail-page/fail-page.component';\r\nimport { ShowSettingService } from '@coreService/show-setting.service';\r\nimport { SortInputService } from '@coreService/sort-input.service';\r\nimport { AuthGuard } from './guards/auth.guard';\r\nimport { SearchDataService } from '@coreService/search-data.service';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { RequestHttpService, BaseUrlInterceptor, AuthTokenInterceptor } from '@coreService/index';\r\nimport { UserTokenService } from '@coreService/user-token.service';\r\nimport { WindowErrorComponent } from './components/window-error/window-error.component';\r\nimport { MessageService } from '@coreService/message.service';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    HeaderComponent,\r\n    LoginComponent,\r\n    SortSettingComponent,\r\n    FailPageComponent,\r\n    WindowErrorComponent\r\n  ],\r\n  imports: [\r\n    CommonModule,\r\n    HttpClientModule\r\n  ],\r\n  providers: [\r\n    AuthGuard,\r\n    ShowSettingService,\r\n    SortInputService,\r\n    SearchDataService,\r\n    RequestHttpService,\r\n    UserTokenService,\r\n    MessageService,\r\n    {provide: HTTP_INTERCEPTORS, useClass: BaseUrlInterceptor, multi: true },\r\n    {provide: HTTP_INTERCEPTORS, useClass: AuthTokenInterceptor, multi: true }\r\n  ],\r\n  exports: [\r\n    HeaderComponent,\r\n    HttpClientModule\r\n  ]\r\n})\r\nexport class CoreModule { }\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  CanLoad, Route, Router, ActivatedRouteSnapshot,\r\n  RouterStateSnapshot, CanActivate\r\n} from '@angular/router';\r\nimport { Observable } from 'rxjs';\r\nimport { UserTokenService } from '@coreService/user-token.service';\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanLoad, CanActivate {\r\n  constructor(private router?: Router, private userToken?: UserTokenService) { }\r\n\r\n  public canActivate(\r\n    next: ActivatedRouteSnapshot,\r\n    state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.userToken.isLogged()) { return true; }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n\r\n  public canLoad(route: Route): Observable<boolean> | Promise<boolean> | boolean {\r\n    if (this.userToken.isLogged()) { return true; }\r\n    this.router.navigate(['/login']);\r\n    return false;\r\n  }\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-fail-page',\r\n  templateUrl: './fail-page.component.html',\r\n  styleUrls: ['./fail-page.component.scss']\r\n})\r\nexport class FailPageComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  public ngOnInit(): void {\r\n  }\r\n\r\n}\r\n","<div class=\"fail\">\r\n  <div class=\"fail__icon\">\r\n    <img src=\"../../../../assets/icons/404.svg\" alt=\"error\">\r\n  </div>\r\n  <div class=\"fail__text\">Sorry, smth went<br>wrong((</div>\r\n</div>\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment as env } from '@env/environment';\r\n\r\n@Injectable()\r\nexport class AuthTokenInterceptor implements HttpInterceptor {\r\n\r\n  constructor() { }\r\n\r\n  public intercept(req: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(req.clone({ params: req.params.set('key', env.API_KEY) }));\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport {\r\n  HttpRequest,\r\n  HttpHandler,\r\n  HttpEvent,\r\n  HttpInterceptor\r\n} from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment as env } from '@env/environment';\r\n\r\n@Injectable()\r\nexport class BaseUrlInterceptor implements HttpInterceptor {\r\n  constructor() { }\r\n\r\n  public intercept(req: HttpRequest<unknown>, next: HttpHandler): Observable<HttpEvent<unknown>> {\r\n    return next.handle(req.clone({ url: `${env.BASE_URL}/${req.url}` }));\r\n  }\r\n}\r\n","export * from './search-data.service';\r\nexport * from './show-setting.service';\r\nexport * from './sort-input.service';\r\nexport * from './request-http.service';\r\nexport * from './base-url.interceptor';\r\nexport * from './auth-token.interceptor';\r\nexport * from './user-token.service';\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class MessageService {\r\n  public showMessage: Subject<{ show: boolean, text?: string, timer?: number }> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  private show(show: boolean, text?: string, timer?: number): void {\r\n    this.showMessage.next({show, text, timer});\r\n  }\r\n\r\n  public showTimer(text: string): void {\r\n    this.show(true, text, 3000);\r\n  }\r\n  public showUp(text: string): void {\r\n    this.show(true, text);\r\n  }\r\n  public hide(): void {\r\n    this.show(false);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpParams } from '@angular/common/http';\r\nimport { Observable, of } from 'rxjs';\r\nimport { delay } from 'rxjs/operators';\r\n\r\n@Injectable()\r\nexport class RequestHttpService {\r\n  private YOUTUBE_URL: string = 'search';\r\n  private YOUTUBE_URL1: string = 'videos';\r\n  private TYPE: string = 'video';\r\n  private PART: string = 'snippet';\r\n  private PART1: string = 'snippet,statistics';\r\n  private MAX_RESULTS: string = '12';\r\n\r\n  constructor(private http?: HttpClient) { }\r\n\r\n  public getToken(username: string, password: string): Observable<unknown> {\r\n    return of(`XXX-token:${username}&${password}`).pipe(delay(2000));\r\n  }\r\n\r\n  public getList(word: string, nextToken?: string): Observable<unknown> {\r\n    let params: HttpParams;\r\n    params = new HttpParams()\r\n    .set('type', this.TYPE)\r\n    .set('part', this.PART)\r\n    .set('maxResults', this.MAX_RESULTS)\r\n    .set('q', word);\r\n    if (nextToken) {\r\n      params = params.set('pageToken', nextToken);\r\n    }\r\n    return this.http.get(this.YOUTUBE_URL, { params });\r\n  }\r\n\r\n  public getListStat(ids: string): Observable<unknown> {\r\n    let params: HttpParams = new HttpParams()\r\n      .set('id', ids)\r\n      .set('part', this.PART1);\r\n    return this.http.get(this.YOUTUBE_URL1, { params });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { IResponse, IResponseItem } from '@model/index';\r\nimport { Subject, EMPTY, ReplaySubject } from 'rxjs';\r\nimport { RequestHttpService } from './request-http.service';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { MessageService } from './message.service';\r\n\r\n@Injectable()\r\nexport class SearchDataService {\r\n  public response: IResponse;\r\n  public loadData: ReplaySubject<IResponseItem[]> = new ReplaySubject();\r\n  public searchWord: string;\r\n  public nextToken: string;\r\n  public canNextRequest: boolean;\r\n  public nowNext: boolean;\r\n\r\n  constructor(private reqHttp?: RequestHttpService, private mess?: MessageService) { }\r\n\r\n  public getResponse(): IResponse {\r\n    return this.response;\r\n  }\r\n  public getResponseItems(): IResponseItem[] {\r\n    return this.response ? this.response.items : [];\r\n  }\r\n\r\n  public setResponse(resp: IResponse): void {\r\n    this.response = resp;\r\n  }\r\n\r\n  public nextHttp(): void {\r\n    this.Http(this.searchWord, true);\r\n  }\r\n\r\n  public Http(word: string, next?: boolean): void {\r\n    this.nowNext = next;\r\n    this.searchWord = word;\r\n    this.mess.showUp('Loading...');\r\n    this.reqHttp.getList(word, next && this.canNextRequest ? this.nextToken : '').pipe(catchError(() => {\r\n      this.mess.showTimer('Request error');\r\n      return EMPTY;\r\n    }))\r\n      .subscribe((val: IResponse) => {\r\n        if (val && val.items.length) {\r\n          this.canNextRequest = 'nextPageToken' in val;\r\n          this.nextToken = val.nextPageToken ? val.nextPageToken : '';\r\n          let listId: string = val.items\r\n            .map((x) => typeof x.id === 'string' ? x.id : x.id.videoId).join();\r\n          this.HttpSecond(listId);\r\n        } else {\r\n          this.clear();\r\n          this.mess.showTimer('Result is empty');\r\n        }\r\n      });\r\n  }\r\n\r\n  public HttpSecond(listId: string): void {\r\n    this.reqHttp.getListStat(listId).pipe(catchError(() => {\r\n      this.mess.showTimer('Request error');\r\n      return EMPTY;\r\n    }))\r\n      .subscribe((newVal: IResponse) => {\r\n        if (this.nowNext) {\r\n          this.addResponse(newVal);\r\n        } else {\r\n          this.setResponse(newVal);\r\n        }\r\n        this.changeResponse();\r\n        this.mess.hide();\r\n      });\r\n  }\r\n\r\n  public addResponse(add: IResponse): void {\r\n    let list: IResponseItem[] = add.items;\r\n    this.response.items.push(...list);\r\n  }\r\n\r\n  public clear(): void {\r\n    this.nextToken = '';\r\n    this.canNextRequest = false;\r\n    this.nowNext = false;\r\n    this.setResponse(null);\r\n    this.changeResponse();\r\n\r\n  }\r\n\r\n  public changeResponse(): void {\r\n    this.loadData.next(this.getResponseItems());\r\n  }\r\n\r\n  public getItem(id: string): IResponseItem {\r\n    return this.getResponseItems().find(item => typeof item.id === 'string'\r\n      ? item.id === id : item.id.videoId === id);\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class ShowSettingService {\r\n  private canShow: boolean;\r\n  public changeShow: Subject<boolean> = new Subject();\r\n\r\n  constructor() {\r\n    this.canShow = false;\r\n  }\r\n  public change(): void {\r\n    this.changeShow.next(this.canShow);\r\n  }\r\n  public hide(): void {\r\n    this.canShow = false;\r\n    this.change();\r\n  }\r\n  public visible(): void {\r\n    this.canShow = true;\r\n    this.change();\r\n  }\r\n\r\n  public get(): boolean {\r\n    return this.canShow;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { ISortFilter } from '@model/index';\r\n\r\n@Injectable()\r\nexport class SortInputService {\r\n  public sorts: ISortFilter;\r\n\r\n  constructor() {\r\n    this.sorts = {words: '', sortDate: 0, sortView: 0};\r\n  }\r\n  public dateClick(): void {\r\n    this.sorts.sortDate = ++this.sorts.sortDate > 2 ? 0 : this.sorts.sortDate;\r\n    this.sorts.sortView = 0;\r\n  }\r\n  public viewClick(): void {\r\n    this.sorts.sortDate = 0;\r\n    this.sorts.sortView = ++this.sorts.sortView > 2 ? 0 : this.sorts.sortView;\r\n  }\r\n  public wordInput(word: string): void {\r\n    this.sorts.words = word;\r\n  }\r\n  public getSortMethod(): ISortFilter {\r\n    return this.sorts;\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Subject } from 'rxjs';\r\n\r\n@Injectable()\r\nexport class UserTokenService {\r\n  public logged: Subject<boolean> = new Subject();\r\n\r\n  constructor() { }\r\n\r\n  private changeLogged(): void {\r\n    this.logged.next(this.isLogged());\r\n  }\r\n\r\n  public isLogged(): boolean {\r\n    return localStorage.token && localStorage.token.length > 0;\r\n  }\r\n\r\n  public set(obj: { name?: string, token?: string }): void {\r\n    if ('name' in obj) {\r\n      localStorage.username = obj.name;\r\n    }\r\n    if ('token' in obj) {\r\n      localStorage.token = obj.token;\r\n    }\r\n    this.changeLogged();\r\n  }\r\n\r\n  public delete(): void {\r\n    localStorage.removeItem('username');\r\n    localStorage.removeItem('token');\r\n    this.changeLogged();\r\n  }\r\n\r\n  public get(field?: string): string {\r\n    switch (field) {\r\n      case 'token': return localStorage.token || '';\r\n      default: return localStorage.username || '';\r\n    }\r\n  }\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment: { production: boolean, API_KEY: string, BASE_URL: string } = {\r\n  production: false,\r\n  // API_KEY: 'AIzaSyDCjP4KCrd2NpSuO-b1hNn0ylO9Xpi2Q8E',\r\n  API_KEY: 'AIzaSyBdKDbwwQBsulBaz4-KbiAS2nomsu2QzEE',\r\n  BASE_URL: 'https://www.googleapis.com/youtube/v3'\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"]}